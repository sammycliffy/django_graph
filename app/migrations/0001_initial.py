# Generated by Django 3.2 on 2021-11-23 12:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PartyMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=140, null=True, unique=True)),
                ('full_name', models.CharField(max_length=140, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=30, unique=True)),
                ('qualification', models.CharField(max_length=19)),
                ('dateOfBirth', models.CharField(max_length=19, null=True)),
                ('sex', models.CharField(max_length=140, null=True)),
                ('maritalStatus', models.CharField(max_length=140, null=True)),
                ('noOfPosition', models.CharField(max_length=19)),
                ('attendance', models.CharField(max_length=19)),
                ('performance', models.CharField(max_length=19)),
                ('partyName', models.CharField(max_length=140, null=True)),
                ('partyCode', models.CharField(default=None, max_length=19)),
                ('contribution', models.CharField(max_length=19)),
                ('duration', models.CharField(max_length=19)),
                ('wardCode', models.CharField(max_length=30)),
                ('votersPin', models.CharField(max_length=19)),
                ('position', models.CharField(max_length=19)),
            ],
        ),
        migrations.CreateModel(
            name='RandomForest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution', models.CharField(max_length=140, null=True)),
                ('attendance', models.CharField(max_length=140, null=True)),
                ('loyalty', models.CharField(blank=True, default=None, max_length=140)),
                ('noOfPosition', models.CharField(max_length=140)),
                ('classification', models.CharField(max_length=30)),
                ('duration', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('companyAddress', models.CharField(max_length=255, null=True)),
                ('companyName', models.CharField(max_length=255, null=True)),
                ('contactPerson', models.CharField(max_length=255, null=True)),
                ('contactPhone', models.CharField(max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
